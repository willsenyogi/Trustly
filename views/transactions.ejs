<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.js"></script>
<link
  rel="stylesheet"
  type="text/css"
  href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.css"
/>

<link rel="stylesheet" href="/css/table-styling.css" />

<div class="transactions-header">
  <h1>Transactions</h1>
  <nav>
    <ul class="transactions-nav">
      <li><button id="filter-today">Today</button></li>
      <li><button id="filter-last-7-days">Last 7 Days</button></li>
      <li><button id="filter-last-30-days">Last 30 Days</button></li>
      <li class="select-date-range">
        <input type="date" id="start-date" placeholder="Start Date" />
        <input type="date" id="end-date" placeholder="End Date" />
        <button id="filter-date-range">Filter Date Range</button>
      </li>
    </ul>
  </nav>
</div>


<div class="transactions-stats">
  <div class="total-transactions">
    <p>Total Transactions</p>
    <h3><%= transactions.length %></h3>
  </div>
</div>

<div class="transactions-list" id="transactions">
  <div class="transactions-list-options">
    <div class="transactions-list-header-left">
      <button id="filter-transfer-cr">Transfer (CR)</button>
      <button id="filter-transfer-db">Transfer (DB)</button>
      <button id="filter-time-deposit-cr">Savings Deposit (CR)</button>
      <button id="filter-time-deposit-db">Savings Deposit (DB)</button>
      <button id="filter-reset">Reset Filter</button>
    </div>
  </div>
  <table class="stripe hover order-column row-border" id="transactions-table">
    <thead>
      <tr>
        <th class="sortable">Date</th>
        <th class="sortable">Account</th>
        <th class="sortable">Type</th>
        <th class="sortable">Amount</th>
        <th class="sortable">Actions</th>
      </tr>
    </thead>
    <tbody>
      <% transactions.forEach(transaction => { %>
      <tr data-transaction-id="<%= transaction._id %>">
        <td><%= transaction.date.toISOString().slice(0, 10) %></td>
        <td><%= transaction.receiver %> (<%= transaction.receiverName %>)</td>
        <td><%= transaction.transactionType %></td>
        <td>
          <%= transaction.transactionType === 'Transfer (CR)' || transaction.transactionType === 'Savings Deposit (CR)' 
              ? '-' 
              : '+' %>
          <%= new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR' }).format(transaction.amount) %>
        </td>
        <td id="editor">
          <a href="#" class="show-invoice" data-transaction-id="<%= transaction._id %>">Show</a>
        </td>
      </tr>
      <% }); %>
    </tbody>
  </table>
</div>

<script>
  $(document).ready(function () {
    // Initialize DataTable once
    var table = $("#transactions-table").DataTable({
      columnDefs: [{ targets: "sortable", orderable: true }],
      order: [],
      language: {
        search: "",
        searchPlaceholder: "Search transactions...",
      },
    });

    // Improved custom sort functionality that does not mess with styles
    $("#transactions-table thead th.sortable").on("click", function () {
      var column = $(this).index();
      var currentOrder = table.order();
      var newOrder =
        currentOrder.length &&
        currentOrder[0][0] === column &&
        currentOrder[0][1] === "asc"
          ? "desc"
          : "asc";

      table.order([column, newOrder]).draw();

      // Manage sort indicators manually to avoid class conflicts
      $("#transactions-table thead th").removeClass("sort-asc sort-desc");
      if (newOrder === "asc") {
        $(this).addClass("sort-asc");
      } else {
        $(this).addClass("sort-desc");
      }
    });

    // Date filters
    $('#filter-today').on('click', function () {
      filterByDate(1);
    });
    $('#filter-last-7-days').on('click', function () {
      filterByDate(7);
    });
    $('#filter-last-30-days').on('click', function () {
      filterByDate(30);
    });
    $('#filter-date-range').on('click', function () {
      var startDate = $('#start-date').val();
      var endDate = $('#end-date').val();
      filterByDateRange(startDate, endDate);
    });

    function filterByDate(days) {
      var today = new Date();
      var startDate = new Date(today);
      startDate.setDate(today.getDate() - days);

      $.fn.dataTable.ext.search.push(function (settings, data) {
        var date = new Date(data[0]);
        return (date >= startDate && date <= today);
      });
      table.draw();
    }

    function filterByDateRange(startDate, endDate) {
      var start = new Date(startDate);
      var end = new Date(endDate);

      $.fn.dataTable.ext.search.push(function (settings, data) {
        var date = new Date(data[0]);
        return (date >= start && date <= end);
      });
      table.draw();
    }

    // Transaction type filters
    $('#filter-transfer-cr').on('click', function () {
      filterByTransactionType('Transfer (CR)');
    });
    $('#filter-transfer-db').on('click', function () {
      filterByTransactionType('Transfer (DB)');
    });
    $('#filter-time-deposit-cr').on('click', function () {
      filterByTransactionType('Savings Deposit (CR)');
    });
    $('#filter-time-deposit-db').on('click', function () {
      filterByTransactionType('Savings Deposit (DB)');
    });

    function filterByTransactionType(type) {
      table.columns(2).search(type).draw();
    }

    // Reset filters
    $('#filter-reset').on('click', function () {
      $.fn.dataTable.ext.search = [];
      table.columns().search('').draw();
    });

    // Handle "Show" button click for generating invoices
    $(document).on("click", ".show-invoice", function (e) {
      e.preventDefault();
      var transactionId = $(this).data("transaction-id");

      $.ajax({
        url: '/transactions/invoice/' + transactionId,
        method: 'GET',
        xhrFields: {
          responseType: 'blob' // Ensure the response is treated as a binary file
        },
        success: function (data) {
          var blob = new Blob([data], { type: 'application/pdf' });
          var url = window.URL.createObjectURL(blob);
          window.open(url);
        },
        error: function () {
          alert("An error occurred while generating the invoice.");
        }
      });
    });
  });
</script>
