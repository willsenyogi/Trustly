<title>Trustly - Saved Accounts</title>
<link
  rel="stylesheet"
  type="text/css"
  href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.css"
/>
<link rel="stylesheet" href="/css/table-styling.css" />
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.js"></script>

<div class="transactions-header">
  <h1>Saved Accounts</h1>
</div>

<nav>
  <ul class="transactions-nav">
  <form action="/api/addAccount" method="POST">
    <input type="text" name="accountNumber" placeholder="Account Number" required style="height: 40px; font-size: larger;">
    <input type="submit" value="+ New Account" style="height: 40px; font-size: larger; background-color: black; color: white; border: 2px solid white;">
  </ul>
</nav>

<div class="transactions-list" id="transactions">
  <table class="stripe hover order-column row-border" id="transactions-table">
    <thead>
      <tr>
        <th class="sortable">Account Number</th>
        <th class="sortable">Owner Name</th>
      </tr>
    </thead>
    <tbody>
      <% savedAccounts.forEach(account => { %>
        <tr>
          <td><%= account.accountNumber %></td>
          <td><%= account.ownerId.name %></td> 
        </tr>
      <% }); %>
    </tbody>    
  </table>
</div>

<script>
  $(document).ready(function () {
    // Initialize DataTable
    var table = $("#saved-accounts-table").DataTable({
      columnDefs: [{ targets: "sortable", orderable: true }],
      order: [],
      language: {
        search: "",
        searchPlaceholder: "Search saved accounts...",
      },
    });

    // Improved custom sort functionality
    $("#saved-accounts-table thead th.sortable").on("click", function () {
      var column = $(this).index();
      var currentOrder = table.order();
      var newOrder =
        currentOrder.length &&
        currentOrder[0][0] === column &&
        currentOrder[0][1] === "asc"
          ? "desc"
          : "asc";

      table.order([column, newOrder]).draw();

      // Manage sort indicators manually to avoid class conflicts
      $("#saved-accounts-table thead th").removeClass("sort-asc sort-desc");
      if (newOrder === "asc") {
        $(this).addClass("sort-asc");
      } else {
        $(this).addClass("sort-desc");
      }
    });
  });
</script>
