<link rel="stylesheet" href="/css/dashboard-styling.css" />
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<div>
  <div class="page-wrapper">
    <div class="container">
      <div class="sub-container">
        <div class="funds-showcase">
          <h1>Available Balance</h1>
          <p>Account Number : <%= loggedUser.accountNumber %></p>
          <h2><%= new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR' }).format(loggedUser.balance) %></h2>
          <div class="transfer-button">
            <a href="/transfer" id="showcase-button">Transfer Funds</a>
            <a href="/transactions" id="showcase-button">View Transactions</a>
          </div>
        </div>

        <div class="cards-showcase">
          <h1>Your Card</h1>
          <p><%= loggedUser.cardType.toUpperCase() %></p>
          <img src="/assets/card.png">
          <p>Valid until <%= formattedExpiry %></p>
          <a href="#" id="showcase-button">See Card Detail</a>
          <a href="#" id="showcase-button">Debit Card Promos</a>
        </div>

        <div class="deposit-showcase">
          <h1>Saving Goals</h1>
          <p>Total Savings</p>
          <h2><%= new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR' }).format(loggedUser.deposit) %></h2>
          <p>Tenor : 6 Months</p>
          <a href="#" id="showcase-button">Add Funds</a>
          <a href="#" id="showcase-button">Withdraw</a>
          <a href="#" id="showcase-button">See Details</a>
        </div>

        <div class="chart-showcase">
          <h1>Your Last 30 Days Transactions</h1>
          <canvas id="transactionsChart"></canvas>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
      const transactions = <%- JSON.stringify(transactions) %>;
      
      // Filter the last 30 days of transactions
      const today = new Date();
      const last30Days = transactions.filter(transaction => {
        const transactionDate = new Date(transaction.date);
        return (today - transactionDate) <= (30 * 24 * 60 * 60 * 1000);
      });

      // Count transactions by type
      const transactionTypes = ['Transfer (CR)', 'Transfer (DB)', 'Time Deposit (CR)', 'Time Deposit (DB)'];
      const transactionCounts = transactionTypes.map(type => {
        return last30Days.filter(transaction => transaction.transactionType === type).length;
      });

      const ctx = document.getElementById('transactionsChart').getContext('2d');
      const transactionsChart = new Chart(ctx, {
        type: 'bar',
        data: {
          labels: transactionTypes,
          datasets: [{
            label: 'Number of Transactions',
            data: transactionCounts,
            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0'],
            borderWidth: 1
          }]
        },
        options: {
        responsive: true,
        plugins: {
          legend: {
            display: true,
            position: 'top'
          },
          tooltip: {
            callbacks: {
              label: function (tooltipItem) {
                return `Count: ${tooltipItem.raw}`;
              }
            }
          }
        },
        scales: {
          x: {
            beginAtZero: true,
            title: {
              display: true,
              text: 'Transaction Type'
            }
          },
          y: {
            beginAtZero: true,
            title: {
              display: true,
              text: 'Number of Transactions'
            },
            ticks: {
              stepSize: 1
            }
          }
        }
      }
    });
  });
</script>