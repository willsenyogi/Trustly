<link rel="stylesheet" href="/css/dashboard-styling.css" />
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<div>
  <div class="page-wrapper">
    <div class="container">
      <div class="sub-container">
        <div class="funds-showcase">
          <h1>Available Balance</h1>
          <p>Account Number : <%= loggedUser.accountNumber %></p>
          <h2>
            <%= new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR' }).format(loggedUser.balance) %>
          </h2>
          <div class="transfer-button">
            <a href="/transfer" id="showcase-button">Transfer Funds</a>
            <a href="/transactions" id="showcase-button">View Transactions</a>
          </div>
        </div>

        <div class="cards-showcase">
          <h1>Your Card</h1>
          <p><%= loggedUser.cardType.toUpperCase() %></p>
          <img src="/assets/card.png" />
          <p>Valid until <%= formattedExpiry %></p>
          <a href="#" id="showcase-button">See Card Detail</a>
          <a href="#" id="showcase-button">Debit Card Promos</a>
        </div>

        <div class="deposit-showcase">
          <h1>Saving Goals</h1>
          <% if (loggedUser) { %>
            <p><%= loggedUser.savingsTitle %></p>
            <p>Total Savings</p>
            <h2>
              <%= new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR' }).format(loggedUser.savingsAmount || 0) %>
            </h2>
            <% if (loggedUser.savingsTarget) { %>
              <p>Savings Target: <%= new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR' }).format(loggedUser.savingsTarget || 0) %></p>
              <a href="#" class="withdraw-button" id="withdraw-button" data-toggle="modal" data-target="#withdrawModal">Close Savings</a>
            <% } %>
          <% } else { %>
            <p>Total Savings</p>
            <h2>
              <%= new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR' }).format(0) %>
            </h2>
          <% } %>
          <a href="/addfunds/savings" id="showcase-button">Add Funds</a>
          <% if (loggedUser.savingsAmount > 0) { %>
            <a href="/addfunds/savings/withdraw" id="showcase-button">Withdraw</a>
          <% } %>
          <% if (wdMessages && wdMessages.length > 0) { %>
            <div style="color: red;">
              <% wdMessages.forEach(function(msg) { %>
                <p><%= msg %></p>
              <% }); %>
            </div>
        <% } %>
        </div>

        <div class="chart-showcase">
          <h1>Your Last 30 Days Transactions</h1>
          <canvas id="transactionsChart"></canvas>
        </div>
      </div>
    </div>
  </div>
</div>

<div id="withdrawModal" class="modal">
  <div class="modal-content">
    <span class="close">&times;</span>
    <h2>Withdraw from Savings</h2>
    <form id="withdraw-form" action="/api/addfunds/withdrawsavings/close" method="POST">
      <input type="hidden" name="savingsAmount" value="<%= loggedUser.savingsAmount %>" />
      <input type="hidden" name="savingsTitle" value="<%= loggedUser.savingsTitle %>" />
      <input type="hidden" name="savingsTarget" value="<%= loggedUser.savingsTarget %>" />
      <input type="hidden" name="accesscode" id="accesscode-input" />
      <button type="submit">Confirm Withdrawal</button>
    </form>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
  const transactions = <%- JSON.stringify(transactions) %>;

  const today = new Date();
  const last30Days = transactions.filter(transaction => {
    const transactionDate = new Date(transaction.date);
    return (today - transactionDate) <= (30 * 24 * 60 * 60 * 1000);
  });

  const transactionTypes = ['Transfer (CR)', 'Transfer (DB)', 'Savings Deposit (CR)', 'Savings Withdrawal (DB)'];
  const transactionCounts = transactionTypes.map(type => {
    return last30Days.filter(transaction => transaction.transactionType === type).length;
  });

  const ctx = document.getElementById('transactionsChart').getContext('2d');
  const transactionsChart = new Chart(ctx, {
    type: 'bar',
    data: {
      labels: transactionTypes,
      datasets: [{
        label: 'Number of Transactions',
        data: transactionCounts,
        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0'],
        borderWidth: 1
      }]
    },
    options: {
      responsive: true,
      plugins: {
        legend: {
          display: true,
          position: 'top'
        },
        tooltip: {
          callbacks: {
            label: function (tooltipItem) {
              return `Count: ${tooltipItem.raw}`;
            }
          }
        }
      },
      scales: {
        x: {
          beginAtZero: true,
          title: {
            display: true,
            text: 'Transaction Type'
          }
        },
        y: {
          beginAtZero: true,
          title: {
            display: true,
            text: 'Number of Transactions'
          },
          ticks: {
            stepSize: 1
          }
        }
      }
    }
  });

  const withdrawButton = document.getElementById('withdraw-button');
  const modal = document.getElementById('withdrawModal');
  const closeModal = document.querySelector('.modal-content .close');
  const withdrawForm = document.getElementById('withdraw-form');

  if (withdrawButton) {
    withdrawButton.addEventListener('click', function (event) {
      event.preventDefault();

      Swal.fire({
        title: 'Enter Access Code',
        input: 'password',
        inputLabel: 'Access Code',
        inputAttributes: {
          autocapitalize: 'off'
        },
        showCancelButton: true,
        confirmButtonText: 'Submit',
        cancelButtonText: 'Cancel',
        inputValidator: (value) => {
          if (!value) {
            return 'You need to enter the access code!';
          }
        }
      }).then((result) => {
        if (result.isConfirmed) {
          document.getElementById('accesscode-input').value = result.value;
          withdrawForm.submit();
        }
      });
    });
  }

  if (closeModal) {
    closeModal.addEventListener('click', function () {
      modal.style.display = 'none';
    });
  }
});
</script>

<style>
  .modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0,0,0,0.4);
  }

  .modal-content {
    background-color: #fefefe;
    margin: 15% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
  }

  .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
  }

  .close:hover,
  .close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
  }
  .withdraw-button {
    background-color: #000;
    border: 1px solid #f0f0f0;
    border-radius: 5px;
    padding: 15px 30px;
    display: inline-block;
    text-decoration: none;
    color: #fff;
    margin-top: 20px;
    font-size: 18px;
  }
  .withdraw-button:hover {
    background-color: #333;
  }
</style>
